use log::*;
use std::fmt::Write as _;

pub fn pub_fn() {
    info!("cur_columns::pub_fn called");
}

#[allow(dead_code)]
pub fn cur_columns() {
    let mut q = String::new();
    write!(&mut q, "create table tmpcur as from ").unwrap();
    write!(&mut q, "read_csv('/home/f14t/931817257079*.csv', ").unwrap();
    write!(&mut q, "header = true, ").unwrap();
    write!(&mut q, "strict_mode = false, ").unwrap();
    write!(&mut q, "columns = {{").unwrap();
    write!(&mut q, "'uuid':'VARCHAR',").unwrap();
    write!(&mut q, "'date':'DATE',").unwrap();
    write!(&mut q, "'payer':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/LeaseContractLength':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/OfferingClass':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/PurchaseOption':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/AvailabilityZone':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/ReservationARN':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/Region':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/PaymentOption':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/EndTime':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/InstanceTypeFamily':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/PurchaseTerm':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/OfferingType':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/StartTime':'VARCHAR',").unwrap();
    write!(&mut q, "'identity/LineItemId':'VARCHAR',").unwrap();
    write!(&mut q, "'identity/TimeInterval':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/InvoiceId':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/InvoicingEntity':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/BillingEntity':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/BillType':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/PayerAccountId':'VARCHAR',").unwrap();
    write!(&mut q, "'bill/BillingPeriodStartDate':'TIMESTAMP',").unwrap();
    write!(&mut q, "'bill/BillingPeriodEndDate':'TIMESTAMP',").unwrap();
    write!(&mut q, "'lineItem/UsageAccountId':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/LineItemType':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/UsageStartDate':'TIMESTAMP',").unwrap();
    write!(&mut q, "'lineItem/UsageEndDate':'TIMESTAMP',").unwrap();
    write!(&mut q, "'lineItem/ProductCode':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/UsageType':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/Operation':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/AvailabilityZone':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/ResourceId':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/UsageAmount':'DOUBLE',").unwrap();
    write!(&mut q, "'lineItem/NormalizationFactor':'DOUBLE',").unwrap();
    write!(&mut q, "'lineItem/NormalizedUsageAmount':'DOUBLE',").unwrap();
    write!(&mut q, "'lineItem/CurrencyCode':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/UnblendedRate':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/UnblendedCost':'DOUBLE',").unwrap();
    write!(&mut q, "'lineItem/BlendedRate':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/BlendedCost':'DOUBLE',").unwrap();
    write!(&mut q, "'lineItem/LineItemDescription':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/TaxType':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/NetUnblendedRate':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/NetUnblendedCost':'VARCHAR',").unwrap();
    write!(&mut q, "'lineItem/LegalEntity':'VARCHAR',").unwrap();
    write!(&mut q, "'product/ProductName':'VARCHAR',").unwrap();
    write!(&mut q, "'product/accessType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/alarmType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/availability':'VARCHAR',").unwrap();
    write!(&mut q, "'product/availabilityZone':'VARCHAR',").unwrap();
    write!(&mut q, "'product/backupEvaluations':'VARCHAR',").unwrap();
    write!(&mut q, "'product/callingType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/capacitystatus':'VARCHAR',").unwrap();
    write!(&mut q, "'product/category':'VARCHAR',").unwrap();
    write!(&mut q, "'product/channel':'VARCHAR',").unwrap();
    write!(&mut q, "'product/ciType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/classicnetworkingsupport':'VARCHAR',").unwrap();
    write!(&mut q, "'product/clockSpeed':'VARCHAR',").unwrap();
    write!(&mut q, "'product/cloudformationresourceProvider':'VARCHAR',").unwrap();
    write!(&mut q, "'product/computeType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/country':'VARCHAR',").unwrap();
    write!(&mut q, "'product/currentGeneration':'VARCHAR',").unwrap();
    write!(&mut q, "'product/dataType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/databaseEngine':'VARCHAR',").unwrap();
    write!(&mut q, "'product/datatransferout':'VARCHAR',").unwrap();
    write!(&mut q, "'product/dedicatedEbsThroughput':'VARCHAR',").unwrap();
    write!(&mut q, "'product/deploymentOption':'VARCHAR',").unwrap();
    write!(&mut q, "'product/describes':'VARCHAR',").unwrap();
    write!(&mut q, "'product/description':'VARCHAR',").unwrap();
    write!(&mut q, "'product/durability':'VARCHAR',").unwrap();
    write!(&mut q, "'product/ecu':'VARCHAR',").unwrap();
    write!(&mut q, "'product/edition':'VARCHAR',").unwrap();
    write!(&mut q, "'product/endpointType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/engineCode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/enhancedNetworkingSupported':'VARCHAR',").unwrap();
    write!(&mut q, "'product/eventType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/feeCode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/feeDescription':'VARCHAR',").unwrap();
    write!(&mut q, "'product/findingGroup':'VARCHAR',").unwrap();
    write!(&mut q, "'product/findingSource':'VARCHAR',").unwrap();
    write!(&mut q, "'product/findingStorage':'VARCHAR',").unwrap();
    write!(&mut q, "'product/freeUsageIncluded':'VARCHAR',").unwrap();
    write!(&mut q, "'product/fromLocation':'VARCHAR',").unwrap();
    write!(&mut q, "'product/fromLocationType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/fromRegionCode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/gets':'VARCHAR',").unwrap();
    write!(&mut q, "'product/gpuMemory':'VARCHAR',").unwrap();
    write!(&mut q, "'product/group':'VARCHAR',").unwrap();
    write!(&mut q, "'product/groupDescription':'VARCHAR',").unwrap();
    write!(&mut q, "'product/instanceFamily':'VARCHAR',").unwrap();
    write!(&mut q, "'product/instanceType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/instanceTypeFamily':'VARCHAR',").unwrap();
    write!(&mut q, "'product/intelAvx2Available':'VARCHAR',").unwrap();
    write!(&mut q, "'product/intelAvxAvailable':'VARCHAR',").unwrap();
    write!(&mut q, "'product/intelTurboAvailable':'VARCHAR',").unwrap();
    write!(&mut q, "'product/invocation':'VARCHAR',").unwrap();
    write!(&mut q, "'product/licenseModel':'VARCHAR',").unwrap();
    write!(&mut q, "'product/lineType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/location':'VARCHAR',").unwrap();
    write!(&mut q, "'product/locationType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/logsDestination':'VARCHAR',").unwrap();
    write!(&mut q, "'product/marketoption':'VARCHAR',").unwrap();
    write!(&mut q, "'product/maxIopsBurstPerformance':'VARCHAR',").unwrap();
    write!(&mut q, "'product/maxIopsvolume':'VARCHAR',").unwrap();
    write!(&mut q, "'product/maxThroughputvolume':'VARCHAR',").unwrap();
    write!(&mut q, "'product/maxVolumeSize':'VARCHAR',").unwrap();
    write!(&mut q, "'product/memory':'VARCHAR',").unwrap();
    write!(&mut q, "'product/memoryGib':'VARCHAR',").unwrap();
    write!(&mut q, "'product/messageDeliveryFrequency':'VARCHAR',").unwrap();
    write!(&mut q, "'product/messageDeliveryOrder':'VARCHAR',").unwrap();
    write!(&mut q, "'product/minVolumeSize':'VARCHAR',").unwrap();
    write!(&mut q, "'product/networkPerformance':'VARCHAR',").unwrap();
    write!(&mut q, "'product/normalizationSizeFactor':'VARCHAR',").unwrap();
    write!(&mut q, "'product/operatingSystem':'VARCHAR',").unwrap();
    write!(&mut q, "'product/operation':'VARCHAR',").unwrap();
    write!(&mut q, "'product/opsItems':'VARCHAR',").unwrap();
    write!(&mut q, "'product/packSize':'VARCHAR',").unwrap();
    write!(&mut q, "'product/physicalProcessor':'VARCHAR',").unwrap();
    write!(&mut q, "'product/platopricingtype':'VARCHAR',").unwrap();
    write!(&mut q, "'product/preInstalledSw':'VARCHAR',").unwrap();
    write!(&mut q, "'product/pricingUnit':'VARCHAR',").unwrap();
    write!(&mut q, "'product/pricingplan':'VARCHAR',").unwrap();
    write!(&mut q, "'product/processorArchitecture':'VARCHAR',").unwrap();
    write!(&mut q, "'product/processorFeatures':'VARCHAR',").unwrap();
    write!(&mut q, "'product/productFamily':'VARCHAR',").unwrap();
    write!(&mut q, "'product/provider':'VARCHAR',").unwrap();
    write!(&mut q, "'product/qPresent':'VARCHAR',").unwrap();
    write!(&mut q, "'product/queueType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/region':'VARCHAR',").unwrap();
    write!(&mut q, "'product/regionCode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/requestCount':'VARCHAR',").unwrap();
    write!(&mut q, "'product/requestDescription':'VARCHAR',").unwrap();
    write!(&mut q, "'product/requestDuration':'VARCHAR',").unwrap();
    write!(&mut q, "'product/requestType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/response':'VARCHAR',").unwrap();
    write!(&mut q, "'product/routingTarget':'VARCHAR',").unwrap();
    write!(&mut q, "'product/routingType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/scanType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/servicecode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/servicename':'VARCHAR',").unwrap();
    write!(&mut q, "'product/sku':'VARCHAR',").unwrap();
    write!(&mut q, "'product/standardGroup':'VARCHAR',").unwrap();
    write!(&mut q, "'product/standardStorage':'VARCHAR',").unwrap();
    write!(&mut q, "'product/steps':'VARCHAR',").unwrap();
    write!(&mut q, "'product/storage':'VARCHAR',").unwrap();
    write!(&mut q, "'product/storageClass':'VARCHAR',").unwrap();
    write!(&mut q, "'product/storageMedia':'VARCHAR',").unwrap();
    write!(&mut q, "'product/storageType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/subscriptionType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/subservice':'VARCHAR',").unwrap();
    write!(&mut q, "'product/tenancy':'VARCHAR',").unwrap();
    write!(&mut q, "'product/timeWindow':'VARCHAR',").unwrap();
    write!(&mut q, "'product/toLocation':'VARCHAR',").unwrap();
    write!(&mut q, "'product/toLocationType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/toRegionCode':'VARCHAR',").unwrap();
    write!(&mut q, "'product/transferType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/trial':'VARCHAR',").unwrap();
    write!(&mut q, "'product/type':'VARCHAR',").unwrap();
    write!(&mut q, "'product/updates':'VARCHAR',").unwrap();
    write!(&mut q, "'product/usageFamily':'VARCHAR',").unwrap();
    write!(&mut q, "'product/usageGroup':'VARCHAR',").unwrap();
    write!(&mut q, "'product/usageVolume':'VARCHAR',").unwrap();
    write!(&mut q, "'product/usagetype':'VARCHAR',").unwrap();
    write!(&mut q, "'product/vcpu':'VARCHAR',").unwrap();
    write!(&mut q, "'product/version':'VARCHAR',").unwrap();
    write!(&mut q, "'product/volumeApiName':'VARCHAR',").unwrap();
    write!(&mut q, "'product/volumeType':'VARCHAR',").unwrap();
    write!(&mut q, "'product/vpcnetworkingsupport':'VARCHAR',").unwrap();
    write!(&mut q, "'product/withActiveUsers':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/RateCode':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/RateId':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/currency':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/publicOnDemandCost':'DOUBLE',").unwrap();
    write!(&mut q, "'pricing/publicOnDemandRate':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/term':'VARCHAR',").unwrap();
    write!(&mut q, "'pricing/unit':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/AmortizedUpfrontCostForUsage':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/AmortizedUpfrontFeeForBillingPeriod':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/EffectiveCost':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/EndTime':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/ModificationStatus':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/NetAmortizedUpfrontCostForUsage':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/NetAmortizedUpfrontFeeForBillingPeriod':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/NetEffectiveCost':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/NetRecurringFeeForUsage':'DOUBLE',").unwrap();
    write!(
        &mut q,
        "'reservation/NetUnusedAmortizedUpfrontFeeForBillingPeriod':'DOUBLE',"
    )
    .unwrap();
    write!(&mut q, "'reservation/NetUnusedRecurringFee':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/NetUpfrontValue':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/NormalizedUnitsPerReservation':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/NumberOfReservations':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/RecurringFeeForUsage':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/StartTime':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/SubscriptionId':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/TotalReservedNormalizedUnits':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/TotalReservedUnits':'VARCHAR',").unwrap();
    write!(&mut q, "'reservation/UnitsPerReservation':'VARCHAR',").unwrap();
    write!(
        &mut q,
        "'reservation/UnusedAmortizedUpfrontFeeForBillingPeriod':'DOUBLE',"
    )
    .unwrap();
    write!(&mut q, "'reservation/UnusedNormalizedUnitQuantity':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/UnusedQuantity':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/UnusedRecurringFee':'DOUBLE',").unwrap();
    write!(&mut q, "'reservation/UpfrontValue':'DOUBLE',").unwrap();
    write!(&mut q, "'discount/SppDiscount':'DOUBLE',").unwrap();
    write!(&mut q, "'discount/TotalDiscount':'DOUBLE',").unwrap();
    write!(&mut q, "'savingsPlan/TotalCommitmentToDate':'DOUBLE',").unwrap();
    write!(&mut q, "'savingsPlan/SavingsPlanARN':'VARCHAR',").unwrap();
    write!(&mut q, "'savingsPlan/SavingsPlanRate':'DOUBLE',").unwrap();
    write!(&mut q, "'savingsPlan/UsedCommitment':'DOUBLE',").unwrap();
    write!(&mut q, "'savingsPlan/SavingsPlanEffectiveCost':'DOUBLE',").unwrap();
    write!(
        &mut q,
        "'savingsPlan/AmortizedUpfrontCommitmentForBillingPeriod':'DOUBLE',"
    )
    .unwrap();
    write!(&mut q, "'savingsPlan/RecurringCommitmentForBillingPeriod':'DOUBLE',").unwrap();
    write!(&mut q, "'savingsPlan/NetSavingsPlanEffectiveCost':'DOUBLE',").unwrap();
    write!(
        &mut q,
        "'savingsPlan/NetAmortizedUpfrontCommitmentForBillingPeriod':'DOUBLE',"
    )
    .unwrap();
    write!(&mut q, "'savingsPlan/NetRecurringCommitmentForBillingPeriod':'DOUBLE',").unwrap();
    write!(&mut q, "'tags':'VARCHAR',").unwrap();
    write!(&mut q, "'costcategories':'VARCHAR'").unwrap();
    write!(&mut q, "}})").unwrap();

    info!("{}", q);
}
